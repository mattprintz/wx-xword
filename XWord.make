# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),debug)
  OBJDIR     = build/obj/Debug/XWord
  TARGETDIR  = build/bin/Debug
  TARGET     = $(TARGETDIR)/XWord
  DEFINES   += -DDEBUG -D_DEBUG -DUNICODE -D_UNICODE -D__WXDEBUG__ -DPUZ_API=""
  INCLUDES  += -I.
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g `wx-config --debug --unicode --cxxflags`
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += `wx-config --debug --unicode --libs` -Lbin/Debug -Llib/Debug -lwx_gtk2u_aui-3.0 -lwx_gtk2u_media-3.0 
  LIBS      += -lpuz -ldl -lyajl
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += build/bin/Debug/libyajl.so build/bin/Debug/libpuz.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR     = build/obj/Release/XWord
  TARGETDIR  = build/bin/Release
  TARGET     = $(TARGETDIR)/XWord
  DEFINES   += -DNDEBUG -DUNICODE -D_UNICODE -DPUZ_API=""
  INCLUDES  += -I.
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 `wx-config --unicode --cxxflags`
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s `wx-config --unicode --libs` -Lbin/Release -Llib/Release -lwx_gtk2u_aui-3.0 -lwx_gtk2u_media-3.0 
  LIBS      += -lpuz -ldl -lyajl
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += build/bin/Release/libpuz.so build/bin/Release/libpuz.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug32)
  OBJDIR     = build/obj/x32/Debug/XWord
  TARGETDIR  = build/bin/Debug
  TARGET     = $(TARGETDIR)/XWord
  DEFINES   += -DDEBUG -D_DEBUG -DUNICODE -D_UNICODE -D__WXDEBUG__ -DPUZ_API=""
  INCLUDES  += -I.
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -m32 `wx-config --debug --unicode --cxxflags`
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -m32 -L/usr/lib32 `wx-config --debug --unicode --libs` -Lbin/Debug -Llib/Debug
  LIBS      += -lpuz -ldl
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += build/bin/Debug/libpuz.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release32)
  OBJDIR     = build/obj/x32/Release/XWord
  TARGETDIR  = build/bin/Release
  TARGET     = $(TARGETDIR)/XWord
  DEFINES   += -DNDEBUG -DUNICODE -D_UNICODE -DPUZ_API=""
  INCLUDES  += -I.
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -m32 `wx-config --unicode --cxxflags`
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -m32 -L/usr/lib32 `wx-config --unicode --libs` -Lbin/Release -Llib/Release
  LIBS      += -lpuz -ldl
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += build/bin/Release/libpuz.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug64)
  OBJDIR     = build/obj/x64/Debug/XWord
  TARGETDIR  = build/bin/Debug
  TARGET     = $(TARGETDIR)/XWord
  DEFINES   += -DDEBUG -D_DEBUG -DUNICODE -D_UNICODE -D__WXDEBUG__ -DPUZ_API=""
  INCLUDES  += -I.
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -m64 `wx-config --debug --unicode --cxxflags`
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -m64 -L/usr/lib64 `wx-config --debug --unicode --libs` -Lbin/Debug -Llib/Debug
  LIBS      += -lpuz -ldl
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += build/bin/Debug/libpuz.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release64)
  OBJDIR     = build/obj/x64/Release/XWord
  TARGETDIR  = build/bin/Release
  TARGET     = $(TARGETDIR)/XWord
  DEFINES   += -DNDEBUG -DUNICODE -D_UNICODE -DPUZ_API=""
  INCLUDES  += -I.
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -m64 `wx-config --unicode --cxxflags`
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -m64 -L/usr/lib64 `wx-config --unicode --libs` -Lbin/Release -Llib/Release
  LIBS      += -lpuz -ldl
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += build/bin/Release/libpuz.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/XGridDrawer.o \
	$(OBJDIR)/App.o \
	$(OBJDIR)/MetadataCtrl.o \
	$(OBJDIR)/MyFrame.o \
	$(OBJDIR)/MyStatusBar.o \
	$(OBJDIR)/MyAuiMgr.o \
	$(OBJDIR)/printout.o \
	$(OBJDIR)/SelectionEvent.o \
	$(OBJDIR)/XGridRebus.o \
	$(OBJDIR)/CluePrompt.o \
	$(OBJDIR)/ClueListBox.o \
	$(OBJDIR)/messages.o \
	$(OBJDIR)/paths.o \
	$(OBJDIR)/PuzEvent.o \
	$(OBJDIR)/CluePanel.o \
	$(OBJDIR)/XGridCtrl.o \
	$(OBJDIR)/config.o \
	$(OBJDIR)/HtmlText.o \
	$(OBJDIR)/alignctrl.o \
	$(OBJDIR)/htmlcluelist.o \
	$(OBJDIR)/BitmapRadio.o \
	$(OBJDIR)/SizedText.o \
	$(OBJDIR)/vcombo.o \
	$(OBJDIR)/ConfigManager.o \
	$(OBJDIR)/ToolInfo.o \
	$(OBJDIR)/color.o \
	$(OBJDIR)/ToolManager.o \
	$(OBJDIR)/wxFB_MetadataFormat.o \
	$(OBJDIR)/PreferencesDialog.o \
	$(OBJDIR)/wxFB_PreferencesPanels.o \
	$(OBJDIR)/PrintDialog.o \
	$(OBJDIR)/wxFB_Dialogs.o \
	$(OBJDIR)/PreferencesPanel.o \
	$(OBJDIR)/metadataformat.o \
	$(OBJDIR)/colorchoice.o \
	$(OBJDIR)/fontface.o \
	$(OBJDIR)/wxFB_TreePanels.o \
	$(OBJDIR)/m_break.o \
	$(OBJDIR)/render.o \
	$(OBJDIR)/parse.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking XWord
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning XWord
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/XGridDrawer.o: src/XGridDrawer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/App.o: src/App.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/MetadataCtrl.o: src/MetadataCtrl.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/MyFrame.o: src/MyFrame.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/MyStatusBar.o: src/MyStatusBar.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/MyAuiMgr.o: src/MyAuiMgr.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/printout.o: src/printout.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/SelectionEvent.o: src/SelectionEvent.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/XGridRebus.o: src/XGridRebus.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/CluePrompt.o: src/CluePrompt.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ClueListBox.o: src/ClueListBox.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/messages.o: src/messages.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/paths.o: src/paths.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/PuzEvent.o: src/PuzEvent.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/CluePanel.o: src/CluePanel.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/XGridCtrl.o: src/XGridCtrl.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/config.o: src/config.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/HtmlText.o: src/widgets/HtmlText.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/alignctrl.o: src/widgets/alignctrl.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/htmlcluelist.o: src/widgets/htmlcluelist.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/BitmapRadio.o: src/widgets/BitmapRadio.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/SizedText.o: src/widgets/SizedText.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/vcombo.o: src/widgets/vcombo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ConfigManager.o: src/utils/ConfigManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ToolInfo.o: src/utils/ToolInfo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/color.o: src/utils/color.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ToolManager.o: src/utils/ToolManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/wxFB_MetadataFormat.o: src/dialogs/wxFB_MetadataFormat.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/PreferencesDialog.o: src/dialogs/PreferencesDialog.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/wxFB_PreferencesPanels.o: src/dialogs/wxFB_PreferencesPanels.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/PrintDialog.o: src/dialogs/PrintDialog.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/wxFB_Dialogs.o: src/dialogs/wxFB_Dialogs.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/PreferencesPanel.o: src/dialogs/PreferencesPanel.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/metadataformat.o: src/dialogs/metadataformat.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/colorchoice.o: src/dialogs/colorchoice.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/fontface.o: src/dialogs/fontface.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/wxFB_TreePanels.o: src/dialogs/wxFB_TreePanels.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/m_break.o: src/html/m_break.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/render.o: src/html/render.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/parse.o: src/html/parse.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
