# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),debug)
  OBJDIR     = build/obj/Debug/puz
  TARGETDIR  = build/bin/Debug
  TARGET     = $(TARGETDIR)/libpuz.so
  DEFINES   += -DDEBUG -D_DEBUG -DPUZ_API=""
  INCLUDES  += -Ipuz -Iyajl/build/yajl-2.0.2/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -fPIC
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -shared -Lbin/Debug -Llib/Debug
  LIBS      += -lyajl -ldl -lzlib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += build/bin/Debug/libyajl.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR     = build/obj/Release/puz
  TARGETDIR  = build/bin/Release
  TARGET     = $(TARGETDIR)/libpuz.so
  DEFINES   += -DNDEBUG -DPUZ_API=""
  INCLUDES  += -Ipuz -Iyajl/build/yajl-2.0.2/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -fPIC
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -shared -Lbin/Release -Llib/Release
  LIBS      += -lyajl -ldl -lzlib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += build/bin/Release/libyajl.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug32)
  OBJDIR     = build/obj/x32/Debug/puz
  TARGETDIR  = build/bin/Debug
  TARGET     = $(TARGETDIR)/libpuz.so
  DEFINES   += -DDEBUG -D_DEBUG -DPUZ_API=""
  INCLUDES  += -Ipuz -Iyajl/build/yajl-2.0.2/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -m32 -fPIC
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -shared -m32 -L/usr/lib32 -Lbin/Debug -Llib/Debug
  LIBS      += -lyajl -ldl -lzlib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += build/bin/Debug/libyajl.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release32)
  OBJDIR     = build/obj/x32/Release/puz
  TARGETDIR  = build/bin/Release
  TARGET     = $(TARGETDIR)/libpuz.so
  DEFINES   += -DNDEBUG -DPUZ_API=""
  INCLUDES  += -Ipuz -Iyajl/build/yajl-2.0.2/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -m32 -fPIC
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -shared -m32 -L/usr/lib32 -Lbin/Release -Llib/Release
  LIBS      += -lyajl -ldl -lzlib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += build/bin/Release/libyajl.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug64)
  OBJDIR     = build/obj/x64/Debug/puz
  TARGETDIR  = build/bin/Debug
  TARGET     = $(TARGETDIR)/libpuz.so
  DEFINES   += -DDEBUG -D_DEBUG -DPUZ_API=""
  INCLUDES  += -Ipuz -Iyajl/build/yajl-2.0.2/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -m64 -fPIC
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -shared -m64 -L/usr/lib64 -Lbin/Debug -Llib/Debug
  LIBS      += -lyajl -ldl -lzlib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += build/bin/Debug/libyajl.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release64)
  OBJDIR     = build/obj/x64/Release/puz
  TARGETDIR  = build/bin/Release
  TARGET     = $(TARGETDIR)/libpuz.so
  DEFINES   += -DNDEBUG -DPUZ_API=""
  INCLUDES  += -Ipuz -Iyajl/build/yajl-2.0.2/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -m64 -fPIC
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -shared -m64 -L/usr/lib64 -Lbin/Release -Llib/Release
  LIBS      += -lyajl -ldl -lzlib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += build/bin/Release/libyajl.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/Word.o \
	$(OBJDIR)/Checksummer.o \
	$(OBJDIR)/Scrambler.o \
	$(OBJDIR)/iterator.o \
	$(OBJDIR)/Grid.o \
	$(OBJDIR)/Clue.o \
	$(OBJDIR)/puzstring.o \
	$(OBJDIR)/Puzzle.o \
	$(OBJDIR)/Square.o \
	$(OBJDIR)/minizip.o \
	$(OBJDIR)/base64.o \
	$(OBJDIR)/xml.o \
	$(OBJDIR)/json.o \
	$(OBJDIR)/pugixml.o \
	$(OBJDIR)/load_xpf.o \
	$(OBJDIR)/save_xpf.o \
	$(OBJDIR)/load_txt.o \
	$(OBJDIR)/save_puz.o \
	$(OBJDIR)/load_puz.o \
	$(OBJDIR)/load_jpz.o \
	$(OBJDIR)/save_jpz.o \
	$(OBJDIR)/load_ipuz.o \
	$(OBJDIR)/zip.o \
	$(OBJDIR)/ioapi.o \
	$(OBJDIR)/unzip.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking puz
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning puz
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/Word.o: puz/Word.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Checksummer.o: puz/Checksummer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Scrambler.o: puz/Scrambler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/iterator.o: puz/iterator.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Grid.o: puz/Grid.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Clue.o: puz/Clue.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/puzstring.o: puz/puzstring.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Puzzle.o: puz/Puzzle.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Square.o: puz/Square.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/minizip.o: puz/utils/minizip.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/base64.o: puz/parse/base64.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/xml.o: puz/parse/xml.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/json.o: puz/parse/json.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/pugixml.o: puz/parse/pugixml/pugixml.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/load_xpf.o: puz/formats/xpf/load_xpf.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/save_xpf.o: puz/formats/xpf/save_xpf.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/load_txt.o: puz/formats/txt/load_txt.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/save_puz.o: puz/formats/puz/save_puz.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/load_puz.o: puz/formats/puz/load_puz.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/load_jpz.o: puz/formats/jpz/load_jpz.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/save_jpz.o: puz/formats/jpz/save_jpz.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/load_ipuz.o: puz/formats/ipuz/load_ipuz.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/zip.o: puz/utils/minizip/zip.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ioapi.o: puz/utils/minizip/ioapi.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/unzip.o: puz/utils/minizip/unzip.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
